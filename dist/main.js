(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>c});var a=t(354),r=t.n(a),o=t(314),i=t.n(o)()(r());i.push([n.id,"*, *::after, *::before {\n  box-sizing: border-box;\n}\n\n:root {\n  --cultured: #f8f9faff;\n  --cultured-2: #e9ecefff;\n  --gainsboro: #dee2e6ff;\n  --light-gray: #ced4daff;\n  --cadet-blue-crayola: #adb5bdff;\n  --sonic-silver: #6c757dff;\n  --davys-grey: #495057ff;\n  --onyx: #343a40ff;\n  --eerie-black: #212529ff;\n  --font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  min-width: 100vw;\n  min-height: 100vh;\n  font-family: var(--font-family);\n  color: var(--onyx);\n  background-color: var(--cultured-2);\n}\n\n#header {\n  background-color: var(--onyx);\n  padding: 1rem;\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n#search-container {\n  position: relative;\n}\n\n#search-container input[type='search'] {\n  appearance: none;\n  border: thin solid var(--cultured);\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  font-family: var(--font-family);\n  background-color: var(--onyx);\n  color: var(--cultured);\n  padding: 0.5rem;\n  margin: 0;\n}\n\n#search-container input[type='search']::placeholder {\n  color: var(--cultured);\n}\n\n#search-container input[type='search']:focus {\n  outline: none;\n  background-color: var(--cultured);\n  color: var(--onyx);\n}\n\n#search-container span {\n  display: none;\n}\n\n#search-container input[type='search']:focus + span:not(:empty) {\n  display: block;\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  transform: translateY(calc(100% - 0.5rem));\n  padding: 0.5rem;\n  padding-top: 1rem;\n  width: 100%;\n  background-color: var(--cultured);\n  color: red;\n  border-bottom-left-radius: 0.5rem;\n  border-bottom-right-radius: 0.5rem;\n}\n\n#select {\n  height: 2rem;\n  border-radius: 1rem;\n  overflow: hidden;\n  background-color: var(--cultured);\n  border: thin solid var(--cultured);\n}\n\n#fahrenheit,\n#celsius {\n  appearance: none;\n  border: none;\n  outline: none;\n  padding: 0;\n  border-radius: 1rem;\n  height: 2rem;\n  width: 3rem;\n  background-color: var(--cultured);\n  color: var(--onyx);\n}\n\n#fahrenheit.active,\n#celsius.active {\n  color: var(--cultured);\n  background-color: var(--onyx);\n}\n\n#container {\n  padding: 2rem;\n  display: grid;\n  gap: 2rem;\n}\n\n#today,\n.card {\n  background-color: var(--cultured);\n  border-radius: 1rem;\n  border: thin solid var(--gainsboro);\n}\n\n\n#today img {\n  grid-column: span 2;\n  height: 10rem;\n}\n\n#forecast {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(11.5rem, 1fr));\n  gap: 2rem;\n}\n\n.card,\n#today {\n  display: grid;\n  align-content: start;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n\n.card p,\n#today p {\n  margin: 0;\n}\n\n.card p:first-of-type,\n#today p:nth-of-type(-n+2) {\n  grid-column: span 2;\n  font-size: 0.8rem;\n  font-weight: 200;\n}\n\n.card p:nth-of-type(2),\n#today p:nth-of-type(3) {\n  grid-column: span 2;\n  font-size: 2rem;\n  font-weight: 600;\n}\n\n.card img {\n  grid-column: span 2;\n  width: 4rem;\n  height: 4rem;\n}\n\n.card p.label,\n#today p.label {\n  justify-self: end;\n  font-weight: 200;\n}\n\n.card p.label + p,\n#today p.label +p {\n  justify-self: start;\n  font-weight: 400;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;EACrB,uBAAuB;EACvB,sBAAsB;EACtB,uBAAuB;EACvB,+BAA+B;EAC/B,yBAAyB;EACzB,uBAAuB;EACvB,iBAAiB;EACjB,wBAAwB;EACxB,0HAA0H;AAC5H;;AAEA;EACE,SAAS;EACT,UAAU;EACV,gBAAgB;EAChB,iBAAiB;EACjB,+BAA+B;EAC/B,kBAAkB;EAClB,mCAAmC;AACrC;;AAEA;EACE,6BAA6B;EAC7B,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,kCAAkC;EAClC,qBAAqB;EACrB,eAAe;EACf,+BAA+B;EAC/B,6BAA6B;EAC7B,sBAAsB;EACtB,eAAe;EACf,SAAS;AACX;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,iCAAiC;EACjC,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;EACd,kBAAkB;EAClB,OAAO;EACP,SAAS;EACT,0CAA0C;EAC1C,eAAe;EACf,iBAAiB;EACjB,WAAW;EACX,iCAAiC;EACjC,UAAU;EACV,iCAAiC;EACjC,kCAAkC;AACpC;;AAEA;EACE,YAAY;EACZ,mBAAmB;EACnB,gBAAgB;EAChB,iCAAiC;EACjC,kCAAkC;AACpC;;AAEA;;EAEE,gBAAgB;EAChB,YAAY;EACZ,aAAa;EACb,UAAU;EACV,mBAAmB;EACnB,YAAY;EACZ,WAAW;EACX,iCAAiC;EACjC,kBAAkB;AACpB;;AAEA;;EAEE,sBAAsB;EACtB,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,aAAa;EACb,SAAS;AACX;;AAEA;;EAEE,iCAAiC;EACjC,mBAAmB;EACnB,mCAAmC;AACrC;;;AAGA;EACE,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,6DAA6D;EAC7D,SAAS;AACX;;AAEA;;EAEE,aAAa;EACb,oBAAoB;EACpB,8BAA8B;EAC9B,qBAAqB;EACrB,aAAa;EACb,WAAW;AACb;;AAEA;;EAEE,SAAS;AACX;;AAEA;;EAEE,mBAAmB;EACnB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;;EAEE,mBAAmB;EACnB,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;EACnB,WAAW;EACX,YAAY;AACd;;AAEA;;EAEE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;;EAEE,mBAAmB;EACnB,gBAAgB;AAClB",sourcesContent:["*, *::after, *::before {\n  box-sizing: border-box;\n}\n\n:root {\n  --cultured: #f8f9faff;\n  --cultured-2: #e9ecefff;\n  --gainsboro: #dee2e6ff;\n  --light-gray: #ced4daff;\n  --cadet-blue-crayola: #adb5bdff;\n  --sonic-silver: #6c757dff;\n  --davys-grey: #495057ff;\n  --onyx: #343a40ff;\n  --eerie-black: #212529ff;\n  --font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  min-width: 100vw;\n  min-height: 100vh;\n  font-family: var(--font-family);\n  color: var(--onyx);\n  background-color: var(--cultured-2);\n}\n\n#header {\n  background-color: var(--onyx);\n  padding: 1rem;\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n#search-container {\n  position: relative;\n}\n\n#search-container input[type='search'] {\n  appearance: none;\n  border: thin solid var(--cultured);\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  font-family: var(--font-family);\n  background-color: var(--onyx);\n  color: var(--cultured);\n  padding: 0.5rem;\n  margin: 0;\n}\n\n#search-container input[type='search']::placeholder {\n  color: var(--cultured);\n}\n\n#search-container input[type='search']:focus {\n  outline: none;\n  background-color: var(--cultured);\n  color: var(--onyx);\n}\n\n#search-container span {\n  display: none;\n}\n\n#search-container input[type='search']:focus + span:not(:empty) {\n  display: block;\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  transform: translateY(calc(100% - 0.5rem));\n  padding: 0.5rem;\n  padding-top: 1rem;\n  width: 100%;\n  background-color: var(--cultured);\n  color: red;\n  border-bottom-left-radius: 0.5rem;\n  border-bottom-right-radius: 0.5rem;\n}\n\n#select {\n  height: 2rem;\n  border-radius: 1rem;\n  overflow: hidden;\n  background-color: var(--cultured);\n  border: thin solid var(--cultured);\n}\n\n#fahrenheit,\n#celsius {\n  appearance: none;\n  border: none;\n  outline: none;\n  padding: 0;\n  border-radius: 1rem;\n  height: 2rem;\n  width: 3rem;\n  background-color: var(--cultured);\n  color: var(--onyx);\n}\n\n#fahrenheit.active,\n#celsius.active {\n  color: var(--cultured);\n  background-color: var(--onyx);\n}\n\n#container {\n  padding: 2rem;\n  display: grid;\n  gap: 2rem;\n}\n\n#today,\n.card {\n  background-color: var(--cultured);\n  border-radius: 1rem;\n  border: thin solid var(--gainsboro);\n}\n\n\n#today img {\n  grid-column: span 2;\n  height: 10rem;\n}\n\n#forecast {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(11.5rem, 1fr));\n  gap: 2rem;\n}\n\n.card,\n#today {\n  display: grid;\n  align-content: start;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n  padding: 1rem;\n  gap: 0.5rem;\n}\n\n.card p,\n#today p {\n  margin: 0;\n}\n\n.card p:first-of-type,\n#today p:nth-of-type(-n+2) {\n  grid-column: span 2;\n  font-size: 0.8rem;\n  font-weight: 200;\n}\n\n.card p:nth-of-type(2),\n#today p:nth-of-type(3) {\n  grid-column: span 2;\n  font-size: 2rem;\n  font-weight: 600;\n}\n\n.card img {\n  grid-column: span 2;\n  width: 4rem;\n  height: 4rem;\n}\n\n.card p.label,\n#today p.label {\n  justify-self: end;\n  font-weight: 200;\n}\n\n.card p.label + p,\n#today p.label +p {\n  justify-self: start;\n  font-weight: 400;\n}\n"],sourceRoot:""}]);const c=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);a&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),e.push(A))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var o={},i=[],c=0;c<n.length;c++){var s=n[c],d=a.base?s[0]+a.base:s[0],A=o[d]||0,p="".concat(d," ").concat(A);o[d]=A+1;var l=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var f=r(u,a);a.byIndex=c,e.splice(c,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var o=a(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var s=a(n,r),d=0;d<o.length;d++){var A=t(o[d]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=s}}},659:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var r=e[a];if(void 0!==r)return r.exports;var o=e[a]={id:a,exports:{}};return n[a](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=a[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),a=t(825),r=t.n(a),o=t(659),i=t.n(o),c=t(56),s=t.n(c),d=t(540),A=t.n(d),p=t(113),l=t.n(p),u=t(208),f={};f.styleTagTransform=l(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=A(),e()(u.A,f),u.A&&u.A.locals&&u.A.locals;const m={"01d":t.p+"b664fef11409c3de15ca.svg","01n":t.p+"67e4d480d8c2873361fb.svg","02d":t.p+"78dc73a6675ca65b2ffe.svg","02n":t.p+"27c2b1d714716cee61b8.svg","03d":t.p+"361dcbd68811d1f203dd.svg","03n":t.p+"361dcbd68811d1f203dd.svg","04d":t.p+"340f5a53337c4a3734dc.svg","04n":t.p+"6f652221ef4c2d3cc202.svg","09d":t.p+"43c26dc218484db5a84a.svg","09n":t.p+"43c26dc218484db5a84a.svg","10d":t.p+"a961db702807c488fa58.svg","10n":t.p+"8b8b6132c039ec14396d.svg","11d":t.p+"a76ee7dd469c89b2f15a.svg","11n":t.p+"c68f354a4831bb3a3ba3.svg","13d":t.p+"c61a30f36e0155e58c1c.svg","13n":t.p+"c61a30f36e0155e58c1c.svg","50d":t.p+"9da78e3e5958be83085c.svg","50n":t.p+"9da78e3e5958be83085c.svg"},h=(n="div")=>document.createElement(n);new class{#n;#e;#t;#a;#r;constructor(){this.#e="ce8fef5a5b6a247296d4aeaa5e8ef82a",this.#t="metric",this.#a="Bayern",this.#n=document.createElement("div"),this.#n.id="content",document.body.append(this.#n);const[n,e,t,a,r]=function(){const n=h();n.id="header";const e=h();e.id="search-container";const t=h("input");t.type="search",t.placeholder="Search for a city";const a=h("span");e.append(t,a);const r=h();r.id="select";const o=h("button");o.id="celsius",o.classList.add("active"),o.textContent="°C";const i=h("button");return i.id="fahrenheit",i.textContent="°F",r.append(o,i),n.append(e,r),[n,t,o,i,a]}();this.#r=r,e.addEventListener("keyup",(n=>{"Enter"===n.key&&(this.#o(e.value),e.value="")})),t.addEventListener("click",(()=>{t.classList.add("active"),a.classList.remove("active"),this.#t="metric",this.#o()})),a.addEventListener("click",(()=>{t.classList.remove("active"),a.classList.add("active"),this.#t="imperial",this.#o()})),this.#n.append(n),this.#o()}async#o(n=this.#a){let e,t,a;this.#a=n;try{const r=await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${n}&limit=1&appid=${this.#e}`,{mode:"cors"}),o=await r.json();e=o[0].lat,t=o[0].lon,a=o[0].name,o[0].state&&o[0].state!==o[0].name&&(a+=`, ${o[0].state}`),this.#r.textContent=""}catch(n){console.log(n),this.#r.textContent="City not found"}if(null!=e&&null!=t&&null!=a)try{const[n,r]=await Promise.all([(async()=>{const n=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${e}&lon=${t}&appid=${this.#e}&units=${this.#t}`,{mode:"cors"});return await n.json()})(),(async()=>{const n=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${e}&lon=${t}&cnt=8&appid=${this.#e}&units=${this.#t}`,{mode:"cors"});return await n.json()})()]);this.#i({weatherData:n,forecastData:r,name:a}),this.#r.textContent=""}catch(n){console.log(n),this.#r.textContent="Could not fetch data"}}#i({weatherData:n={},forecastData:e={},name:t="Unknown"}){const{icon:a}=n.weather[0];let r=new Date;r=`${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][r.getDay()]}, ${r.getDate()}.${r.getMonth()+1}.${r.getFullYear()}`;const o="metric"===this.#t?`${Math.round(n.main.temp)}°C`:`${Math.round(n.main.temp)}°F`,i=100*e.list[0].pop+"%",c="metric"===this.#t?`${Math.round(3.6*n.wind.speed)}km/h`:`${Math.round(n.wind.speed)}mph`,s=`${n.main.humidity}%`;let d=new Date(1e3*n.sys.sunrise);[d]=d.toTimeString().match(/^(\d{2}):(\d{2})/);let A=new Date(1e3*n.sys.sunset);[A]=A.toTimeString().match(/^(\d{2}):(\d{2})/);const p=[];e.list.forEach((n=>{const e={icon:n.weather[0].icon,time:n.dt_txt.match(/ (\d{2}:\d{2})/)[1],temperature:"metric"===this.#t?`${Math.round(n.main.temp)}°C`:`${Math.round(n.main.temp)}°F`,chanceOfRain:`${Math.round(100*n.pop)}%`,speed:"metric"===this.#t?`${Math.round(3.6*n.wind.speed)}km/h`:`${Math.round(n.wind.speed)}mph`};"rain"in n&&"3h"in n.rain&&(e.rain=`${n.rain["3h"]}mm`),p.push(e)})),this.#n.children[1]&&this.#n.children[1].remove();const l={name:t,icon:a,today:r,temperature:o,chanceOfRain:i,speed:c,humidity:s,sunset:A,sunrise:d,forecast:p};"rain"in n&&"1h"in n.rain&&(l.rain=`${n.rain["1h"]}mm`);const u=function(n){const e=h();e.id="container";const t=h();t.id="today";const a=h("p");a.textContent=n.name;const r=h("p");r.textContent=n.today;const o=h("img");o.src=m[n.icon];const i=h("p");i.textContent=n.temperature;const c=h("p");c.classList.add("label"),c.textContent="Chance of rain:";const s=h("p");s.textContent=n.chanceOfRain;const d=h("p");d.classList.add("label"),d.textContent="Wind speed:";const A=h("p");A.textContent=n.speed;const p=h("p");p.classList.add("label"),p.textContent="Humidity:";const l=h("p");l.textContent=n.humidity;const u=h("p");u.classList.add("label"),u.textContent="Sunrise:";const f=h("p");f.textContent=n.sunrise;const g=h("p");g.classList.add("label"),g.textContent="Sunset:";const C=h("p");if(C.textContent=n.sunset,t.append(a,r,o,i,c,s),null!=n.rain){const e=h("p");e.classList.add("label"),e.textContent="Volume/h:";const a=h("p");a.textContent=n.rain,t.append(e,a)}t.append(d,A,p,l,u,f,g,C);const E=h();return E.id="forecast",[...n.forecast].forEach((n=>{const e=h();e.classList.add("card");const t=h("img");t.src=m[n.icon];const a=h("p");a.textContent=n.time;const r=h("p");r.textContent=n.temperature;const o=h("p");o.classList.add("label"),o.textContent="Rain:";const i=h("p");i.textContent=n.chanceOfRain;const c=h("p");c.classList.add("label"),c.textContent="Wind:";const s=h("p");if(s.textContent=n.speed,e.append(a,t,r,o,i),null!=n.rain){const t=h("p");t.classList.add("label"),t.textContent="Volume/3h:";const a=h("p");a.textContent=n.rain,e.append(t,a)}e.append(c,s),E.append(e)})),e.append(t,E),e}(l);this.#n.append(u);const f=document.createElement("template");f.innerHTML='\n        <a\n      style="\n        position: fixed;\n        bottom: 0;\n        right: 0;\n        color: black;\n        background-color: white;\n        text-decoration: none;\n        font-size: 16px;\n        font-family: sans-serif;\n        padding: 2px;\n        border: thin solid black;\n        text-decoration: underline;\n      "\n      href="https://tomsoerr.github.io/#/impressum"\n    >\n      Imprint\n    </a>\n    <span\n      style="\n        z-index: 1000;\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        color: black;\n        background-color: white;\n        text-decoration: none;\n        font-size: 16px;\n        font-family: sans-serif;\n        padding: 2px;\n        border: thin solid black;\n      "\n    >\n      Not a commercial site, only for educational purposes.\n    </span>',document.body.append(f.content)}}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,